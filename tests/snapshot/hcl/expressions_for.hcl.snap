>[for s in var.list : upper(s)]
#^ source.hcl punctuation.section.brackets.begin.hcl
# ^^^ source.hcl keyword.control.hcl
#    ^ source.hcl
#     ^ source.hcl variable.other.readwrite.hcl
#      ^ source.hcl
#       ^^ source.hcl keyword.operator.word.hcl
#         ^ source.hcl
#          ^^^ source.hcl variable.other.readwrite.hcl
#             ^ source.hcl keyword.operator.accessor.hcl
#              ^^^^ source.hcl variable.other.member.hcl
#                  ^ source.hcl
#                   ^ source.hcl keyword.operator.hcl
#                    ^ source.hcl
#                     ^^^^^ source.hcl meta.function-call.hcl support.function.builtin.hcl
#                          ^ source.hcl meta.function-call.hcl punctuation.section.parens.begin.hcl
#                           ^ source.hcl meta.function-call.hcl
#                            ^ source.hcl meta.function-call.hcl punctuation.section.parens.end.hcl
#                             ^ source.hcl punctuation.section.brackets.end.hcl
>
>[for k, v in var.map : length(k) + length(v)]
#^ source.hcl punctuation.section.brackets.begin.hcl
# ^^^ source.hcl keyword.control.hcl
#    ^ source.hcl
#     ^ source.hcl variable.other.readwrite.hcl
#      ^ source.hcl punctuation.separator.hcl
#       ^ source.hcl
#        ^ source.hcl variable.other.readwrite.hcl
#         ^ source.hcl
#          ^^ source.hcl keyword.operator.word.hcl
#            ^ source.hcl
#             ^^^ source.hcl variable.other.readwrite.hcl
#                ^ source.hcl keyword.operator.accessor.hcl
#                 ^^^ source.hcl variable.other.member.hcl
#                    ^ source.hcl
#                     ^ source.hcl keyword.operator.hcl
#                      ^ source.hcl
#                       ^^^^^^ source.hcl meta.function-call.hcl support.function.builtin.hcl
#                             ^ source.hcl meta.function-call.hcl punctuation.section.parens.begin.hcl
#                              ^ source.hcl meta.function-call.hcl
#                               ^ source.hcl meta.function-call.hcl punctuation.section.parens.end.hcl
#                                ^ source.hcl
#                                 ^ source.hcl keyword.operator.arithmetic.hcl
#                                  ^ source.hcl
#                                   ^^^^^^ source.hcl meta.function-call.hcl support.function.builtin.hcl
#                                         ^ source.hcl meta.function-call.hcl punctuation.section.parens.begin.hcl
#                                          ^ source.hcl meta.function-call.hcl
#                                           ^ source.hcl meta.function-call.hcl punctuation.section.parens.end.hcl
#                                            ^ source.hcl punctuation.section.brackets.end.hcl
>
>[for i, v in var.list : "${i} is ${v}"]
#^ source.hcl punctuation.section.brackets.begin.hcl
# ^^^ source.hcl keyword.control.hcl
#    ^ source.hcl
#     ^ source.hcl variable.other.readwrite.hcl
#      ^ source.hcl punctuation.separator.hcl
#       ^ source.hcl
#        ^ source.hcl variable.other.readwrite.hcl
#         ^ source.hcl
#          ^^ source.hcl keyword.operator.word.hcl
#            ^ source.hcl
#             ^^^ source.hcl variable.other.readwrite.hcl
#                ^ source.hcl keyword.operator.accessor.hcl
#                 ^^^^ source.hcl variable.other.member.hcl
#                     ^ source.hcl
#                      ^ source.hcl keyword.operator.hcl
#                       ^ source.hcl
#                        ^ source.hcl string.quoted.double.hcl punctuation.definition.string.begin.hcl
#                         ^^ source.hcl string.quoted.double.hcl meta.interpolation.hcl keyword.other.interpolation.begin.hcl
#                           ^ source.hcl string.quoted.double.hcl meta.interpolation.hcl variable.other.readwrite.hcl
#                            ^ source.hcl string.quoted.double.hcl meta.interpolation.hcl keyword.other.interpolation.end.hcl
#                             ^^^ source.hcl string.quoted.double.hcl
#                                ^ source.hcl string.quoted.double.hcl meta.interpolation.hcl
#                                 ^^ source.hcl string.quoted.double.hcl meta.interpolation.hcl keyword.other.interpolation.begin.hcl
#                                   ^ source.hcl string.quoted.double.hcl meta.interpolation.hcl variable.other.readwrite.hcl
#                                    ^ source.hcl string.quoted.double.hcl meta.interpolation.hcl keyword.other.interpolation.end.hcl
#                                     ^ source.hcl string.quoted.double.hcl punctuation.definition.string.end.hcl
#                                      ^ source.hcl punctuation.section.brackets.end.hcl
>
>{for s in var.list : s => upper(s)}
#^ source.hcl punctuation.section.braces.begin.hcl
# ^^^ source.hcl keyword.control.hcl
#    ^ source.hcl
#     ^ source.hcl variable.other.readwrite.hcl
#      ^ source.hcl
#       ^^ source.hcl keyword.operator.word.hcl
#         ^ source.hcl
#          ^^^ source.hcl variable.other.readwrite.hcl
#             ^ source.hcl keyword.operator.accessor.hcl
#              ^^^^ source.hcl variable.other.member.hcl
#                  ^ source.hcl
#                   ^ source.hcl keyword.operator.hcl
#                    ^ source.hcl
#                     ^ source.hcl variable.other.readwrite.hcl
#                      ^ source.hcl
#                       ^^ source.hcl storage.type.function.hcl
#                         ^ source.hcl
#                          ^^^^^ source.hcl meta.function-call.hcl support.function.builtin.hcl
#                               ^ source.hcl meta.function-call.hcl punctuation.section.parens.begin.hcl
#                                ^ source.hcl meta.function-call.hcl
#                                 ^ source.hcl meta.function-call.hcl punctuation.section.parens.end.hcl
#                                  ^ source.hcl punctuation.section.braces.end.hcl
>
>[for s in var.list : upper(s) if s != ""]
#^ source.hcl punctuation.section.brackets.begin.hcl
# ^^^ source.hcl keyword.control.hcl
#    ^ source.hcl
#     ^ source.hcl variable.other.readwrite.hcl
#      ^ source.hcl
#       ^^ source.hcl keyword.operator.word.hcl
#         ^ source.hcl
#          ^^^ source.hcl variable.other.readwrite.hcl
#             ^ source.hcl keyword.operator.accessor.hcl
#              ^^^^ source.hcl variable.other.member.hcl
#                  ^ source.hcl
#                   ^ source.hcl keyword.operator.hcl
#                    ^ source.hcl
#                     ^^^^^ source.hcl meta.function-call.hcl support.function.builtin.hcl
#                          ^ source.hcl meta.function-call.hcl punctuation.section.parens.begin.hcl
#                           ^ source.hcl meta.function-call.hcl
#                            ^ source.hcl meta.function-call.hcl punctuation.section.parens.end.hcl
#                             ^ source.hcl
#                              ^^ source.hcl keyword.control.conditional.hcl
#                                ^ source.hcl
#                                 ^ source.hcl variable.other.readwrite.hcl
#                                  ^ source.hcl
#                                   ^^ source.hcl keyword.operator.hcl
#                                     ^ source.hcl
#                                      ^ source.hcl string.quoted.double.hcl punctuation.definition.string.begin.hcl
#                                       ^ source.hcl string.quoted.double.hcl punctuation.definition.string.end.hcl
#                                        ^ source.hcl punctuation.section.brackets.end.hcl
>
>locals {
#^^^^^^ source.hcl meta.block.hcl entity.name.type.hcl
#      ^ source.hcl meta.block.hcl
#       ^ source.hcl meta.block.hcl punctuation.section.block.begin.hcl
>  admin_users = {
#^^ source.hcl meta.block.hcl
#  ^^^^^^^^^^^ source.hcl meta.block.hcl variable.declaration.hcl variable.other.readwrite.hcl
#             ^ source.hcl meta.block.hcl variable.declaration.hcl
#              ^ source.hcl meta.block.hcl variable.declaration.hcl keyword.operator.assignment.hcl
#               ^ source.hcl meta.block.hcl variable.declaration.hcl
#                ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.section.braces.begin.hcl
>    for name, user in var.users : name => user if user.is_admin
#^^^^ source.hcl meta.block.hcl meta.braces.hcl
#    ^^^ source.hcl meta.block.hcl meta.braces.hcl keyword.control.hcl
#       ^ source.hcl meta.block.hcl meta.braces.hcl
#        ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.separator.hcl
#             ^ source.hcl meta.block.hcl meta.braces.hcl
#              ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                  ^ source.hcl meta.block.hcl meta.braces.hcl
#                   ^^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.word.hcl
#                     ^ source.hcl meta.block.hcl meta.braces.hcl
#                      ^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                         ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.accessor.hcl
#                          ^^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.member.hcl
#                               ^ source.hcl meta.block.hcl meta.braces.hcl
#                                ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.hcl
#                                 ^ source.hcl meta.block.hcl meta.braces.hcl
#                                  ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                                      ^ source.hcl meta.block.hcl meta.braces.hcl
#                                       ^^ source.hcl meta.block.hcl meta.braces.hcl storage.type.function.hcl
#                                         ^ source.hcl meta.block.hcl meta.braces.hcl
#                                          ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                                              ^ source.hcl meta.block.hcl meta.braces.hcl
#                                               ^^ source.hcl meta.block.hcl meta.braces.hcl keyword.control.conditional.hcl
#                                                 ^ source.hcl meta.block.hcl meta.braces.hcl
#                                                  ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                                                      ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.accessor.hcl
#                                                       ^^^^^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.member.hcl
>  }
#^^ source.hcl meta.block.hcl meta.braces.hcl
#  ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.section.braces.end.hcl
>  regular_users = {
#^^ source.hcl meta.block.hcl
#  ^^^^^^^^^^^^^ source.hcl meta.block.hcl variable.declaration.hcl variable.other.readwrite.hcl
#               ^ source.hcl meta.block.hcl variable.declaration.hcl
#                ^ source.hcl meta.block.hcl variable.declaration.hcl keyword.operator.assignment.hcl
#                 ^ source.hcl meta.block.hcl variable.declaration.hcl
#                  ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.section.braces.begin.hcl
>    for name, user in var.users : name => user
#^^^^ source.hcl meta.block.hcl meta.braces.hcl
#    ^^^ source.hcl meta.block.hcl meta.braces.hcl keyword.control.hcl
#       ^ source.hcl meta.block.hcl meta.braces.hcl
#        ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.separator.hcl
#             ^ source.hcl meta.block.hcl meta.braces.hcl
#              ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                  ^ source.hcl meta.block.hcl meta.braces.hcl
#                   ^^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.word.hcl
#                     ^ source.hcl meta.block.hcl meta.braces.hcl
#                      ^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                         ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.accessor.hcl
#                          ^^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.member.hcl
#                               ^ source.hcl meta.block.hcl meta.braces.hcl
#                                ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.hcl
#                                 ^ source.hcl meta.block.hcl meta.braces.hcl
#                                  ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                                      ^ source.hcl meta.block.hcl meta.braces.hcl
#                                       ^^ source.hcl meta.block.hcl meta.braces.hcl storage.type.function.hcl
#                                         ^ source.hcl meta.block.hcl meta.braces.hcl
#                                          ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
>    if !user.is_admin
#^^^^ source.hcl meta.block.hcl meta.braces.hcl
#    ^^ source.hcl meta.block.hcl meta.braces.hcl keyword.control.conditional.hcl
#      ^ source.hcl meta.block.hcl meta.braces.hcl
#       ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.logical.hcl
#        ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.accessor.hcl
#             ^^^^^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.member.hcl
>  }
#^^ source.hcl meta.block.hcl meta.braces.hcl
#  ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.section.braces.end.hcl
>  admin_users_list = [
#^^ source.hcl meta.block.hcl
#  ^^^^^^^^^^^^^^^^ source.hcl meta.block.hcl variable.declaration.hcl variable.other.readwrite.hcl
#                  ^ source.hcl meta.block.hcl variable.declaration.hcl
#                   ^ source.hcl meta.block.hcl variable.declaration.hcl keyword.operator.assignment.hcl
#                    ^ source.hcl meta.block.hcl variable.declaration.hcl
#                     ^ source.hcl meta.block.hcl punctuation.section.brackets.begin.hcl
>    for name, user in var.users : name if user.is_admin
#^^^^ source.hcl meta.block.hcl
#    ^^^ source.hcl meta.block.hcl keyword.control.hcl
#       ^ source.hcl meta.block.hcl
#        ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl punctuation.separator.hcl
#             ^ source.hcl meta.block.hcl
#              ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#                  ^ source.hcl meta.block.hcl
#                   ^^ source.hcl meta.block.hcl keyword.operator.word.hcl
#                     ^ source.hcl meta.block.hcl
#                      ^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#                         ^ source.hcl meta.block.hcl keyword.operator.accessor.hcl
#                          ^^^^^ source.hcl meta.block.hcl variable.other.member.hcl
#                               ^ source.hcl meta.block.hcl
#                                ^ source.hcl meta.block.hcl keyword.operator.hcl
#                                 ^ source.hcl meta.block.hcl
#                                  ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#                                      ^ source.hcl meta.block.hcl
#                                       ^^ source.hcl meta.block.hcl keyword.control.conditional.hcl
#                                         ^ source.hcl meta.block.hcl
#                                          ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#                                              ^ source.hcl meta.block.hcl keyword.operator.accessor.hcl
#                                               ^^^^^^^^ source.hcl meta.block.hcl variable.other.member.hcl
>  ]
#^^ source.hcl meta.block.hcl
#  ^ source.hcl meta.block.hcl punctuation.section.brackets.end.hcl
>  regular_users_list = [
#^^ source.hcl meta.block.hcl
#  ^^^^^^^^^^^^^^^^^^ source.hcl meta.block.hcl variable.declaration.hcl variable.other.readwrite.hcl
#                    ^ source.hcl meta.block.hcl variable.declaration.hcl
#                     ^ source.hcl meta.block.hcl variable.declaration.hcl keyword.operator.assignment.hcl
#                      ^ source.hcl meta.block.hcl variable.declaration.hcl
#                       ^ source.hcl meta.block.hcl punctuation.section.brackets.begin.hcl
>    for name, user in var.users : name
#^^^^ source.hcl meta.block.hcl
#    ^^^ source.hcl meta.block.hcl keyword.control.hcl
#       ^ source.hcl meta.block.hcl
#        ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl punctuation.separator.hcl
#             ^ source.hcl meta.block.hcl
#              ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#                  ^ source.hcl meta.block.hcl
#                   ^^ source.hcl meta.block.hcl keyword.operator.word.hcl
#                     ^ source.hcl meta.block.hcl
#                      ^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#                         ^ source.hcl meta.block.hcl keyword.operator.accessor.hcl
#                          ^^^^^ source.hcl meta.block.hcl variable.other.member.hcl
#                               ^ source.hcl meta.block.hcl
#                                ^ source.hcl meta.block.hcl keyword.operator.hcl
#                                 ^ source.hcl meta.block.hcl
#                                  ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
>    if !user.is_admin
#^^^^ source.hcl meta.block.hcl
#    ^^ source.hcl meta.block.hcl keyword.control.conditional.hcl
#      ^ source.hcl meta.block.hcl
#       ^ source.hcl meta.block.hcl keyword.operator.logical.hcl
#        ^^^^ source.hcl meta.block.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl keyword.operator.accessor.hcl
#             ^^^^^^^^ source.hcl meta.block.hcl variable.other.member.hcl
>  ]
#^^ source.hcl meta.block.hcl
#  ^ source.hcl meta.block.hcl punctuation.section.brackets.end.hcl
>}
#^ source.hcl meta.block.hcl punctuation.section.block.end.hcl
>
>locals {
#^^^^^^ source.hcl meta.block.hcl entity.name.type.hcl
#      ^ source.hcl meta.block.hcl
#       ^ source.hcl meta.block.hcl punctuation.section.block.begin.hcl
>  users_by_role = {
#^^ source.hcl meta.block.hcl
#  ^^^^^^^^^^^^^ source.hcl meta.block.hcl variable.declaration.hcl variable.other.readwrite.hcl
#               ^ source.hcl meta.block.hcl variable.declaration.hcl
#                ^ source.hcl meta.block.hcl variable.declaration.hcl keyword.operator.assignment.hcl
#                 ^ source.hcl meta.block.hcl variable.declaration.hcl
#                  ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.section.braces.begin.hcl
>    for name, user in var.users : user.role => name...
#^^^^ source.hcl meta.block.hcl meta.braces.hcl
#    ^^^ source.hcl meta.block.hcl meta.braces.hcl keyword.control.hcl
#       ^ source.hcl meta.block.hcl meta.braces.hcl
#        ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#            ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.separator.hcl
#             ^ source.hcl meta.block.hcl meta.braces.hcl
#              ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                  ^ source.hcl meta.block.hcl meta.braces.hcl
#                   ^^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.word.hcl
#                     ^ source.hcl meta.block.hcl meta.braces.hcl
#                      ^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                         ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.accessor.hcl
#                          ^^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.member.hcl
#                               ^ source.hcl meta.block.hcl meta.braces.hcl
#                                ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.hcl
#                                 ^ source.hcl meta.block.hcl meta.braces.hcl
#                                  ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                                      ^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.accessor.hcl
#                                       ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.member.hcl
#                                           ^ source.hcl meta.block.hcl meta.braces.hcl
#                                            ^^ source.hcl meta.block.hcl meta.braces.hcl storage.type.function.hcl
#                                              ^ source.hcl meta.block.hcl meta.braces.hcl
#                                               ^^^^ source.hcl meta.block.hcl meta.braces.hcl variable.other.readwrite.hcl
#                                                   ^^^ source.hcl meta.block.hcl meta.braces.hcl keyword.operator.hcl
>  }
#^^ source.hcl meta.block.hcl meta.braces.hcl
#  ^ source.hcl meta.block.hcl meta.braces.hcl punctuation.section.braces.end.hcl
>}
#^ source.hcl meta.block.hcl punctuation.section.block.end.hcl
>
>